name: Deploy-to-sit1

on:
  push:
    branches: [ sit1 ]

env:
  ENV_NAME: sit1

jobs:
  deploy-using-sam:
    runs-on: ubuntu-latest
    environment:   
      name: sit1
      url: https://api.sit1.<%= baseDomain %>/<%= uriStem %>/      
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'
      - name: SAM Build
        run: npm run build
      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1      
      - name: OpenAPI Upload
        run: aws s3 cp openapi.yaml s3://${{ secrets.AWS_DEPLOY_BUCKET }}/${{ github.repository }}/openapi-${{ steps.generate-uuid.outputs.uuid }}.yaml             
      - name: SAM Package
        run: sam package --output-template-file packaged-template.yaml --s3-prefix ${{ github.repository }} --s3-bucket ${{ secrets.AWS_DEPLOY_BUCKET }}
      - name: SAM Deploy
        run:
          sam deploy --template packaged-template.yaml --tags env=$ENV_NAME --no-fail-on-empty-changeset --stack-name <%= stackName %>-$ENV_NAME --s3-bucket ${{ secrets.AWS_DEPLOY_BUCKET }} --s3-prefix ${{ github.repository }} --parameter-overrides EnvName=sit1 S3BucketName=${{ secrets.AWS_DEPLOY_BUCKET }} OpenAPIFile=${{ github.repository }}/openapi-${{ steps.generate-uuid.outputs.uuid }}.yaml Deployment=AllAtOnce --capabilities CAPABILITY_IAM

  validate:
    runs-on: ubuntu-latest
    needs: deploy-using-sam
    steps:
      - uses: actions/checkout@v2
      - name: Post Deploy Checks
        run: 
          npm install && node ./node_modules/newman/bin/newman run ./api_tests/postman-collection.json -e ./api_tests/env/aws-$ENV_NAME.json